Xref: cantaloupe.srv.cs.cmu.edu rec.autos:102771 rec.autos.tech:53972 rec.autos.sport:29294 rec.autos.driving:16455 rec.autos.vw:14414 rec.autos.antique:1195 news.answers:7752
Newsgroups: rec.autos,rec.autos.tech,rec.autos.sport,rec.autos.driving,rec.autos.vw,rec.autos.antique,news.answers
Path: cantaloupe.srv.cs.cmu.edu!magnesium.club.cc.cmu.edu!news.sei.cmu.edu!cis.ohio-state.edu!zaphod.mps.ohio-state.edu!darwin.sura.net!udel!news.intercon.com!psinntp!balltown!welty
From: welty@cabot.balltown.cma.COM (richard welty)
Subject: rec.autos: Automotive Mailing Lists: how to set up your own
Message-ID: <1993Apr20.040503.18447@cabot.balltown.cma.COM>
Followup-To: rec.autos
Keywords: Monthly Posting
Reply-To: welty@balltown.cma.com
Organization: New York State Institute for Sebastian Cabot Studies
Date: Tue, 20 Apr 1993 04:05:03 GMT
Approved: news-answers-request@MIT.Edu
Lines: 116

Archive-Name: rec-autos/part6

[New article as of 4 February 1993 -- rpw]


Many people want to set up mailing lists for their favorite
automotive topics; rather fewer know how to do it.  This article
will provide the essential information for doing so on standard
Unix systems.  A shell script and examples of alias file setups
are included which presently run on a Sparc 2 here at balltown.cma.com
for a number of mailing lists.  Note that if you do set up an automotive
mailing list, please let me know of the -request address so that I can
list it in the montly rec.autos posting.  Also inform the keeper of the
Usenet list-of-lists (check news.answers for this monthly posting.)

First of all, to get anywhere, you need to either 1) be a sysadmin,
or 2) have some measure of assistance from your sysadmin.  It is also
important that you have reasonably good network connectivity; if it seems
like you get everything several days after anyone else, or that you
have trouble getting email through, then your network connectivity is
probably not good enough.

Listserv:

There is a handy automated mailing list package named listserv, which
is available from several ftp servers on the network.  Details of
the installation and operation of listserv are beyond the scope of this
article, but anyone who is considering running a large mailing list should
probably  look at listserv carefully.

The Alias file:

On a typical unix system; there is a file named /usr/lib/aliases on
whichever file server is your mail host; it contains lines such as:

foo:   bar, baz, bletch


which means that any email sent the name `foo' on that host is
redistributed to users bar, baz, and bletch.  thus, the simplest
possible email list is 

my-favorite-car:  member1, member2, member3, my-address
my-favorite-car-request: my-address

this has a couple of problems; the most noticeable one being that
you have to be superuser to edit the alias file.  however, you can
do the following, with the connivance of your sysadmin:

my-favorite-car: :include:/home/mydir/misc/autos/my-favorite-car-list
my-favorite-car-request: my-address

Where the file specified is a list of comma and newline separated
addresses.  This file can be in the list admin's home directory,
owned by the list admin.

Bounced Mail:

this still has a problem; bounced mail usually gets distributed to all the
members of the list, which is generally considered somewhat irritating.
Therefore, the way that the driving school mailing list is set up
is instructive (Thanks to harpal chohan of the bmw list for this setup,
by the way.  I'm not sure where he got it from.)


school-request:   welty
school-rebroadcast:  :include:/home/newwelty/misc/autos/school/list
school: "|/usr/local/adm/bin/explscript school"
owner-school: school-request
owner-school-out: school-request


here's what is going on here:

the owner- and -request addresses are intended as traps for bounced mail
coming from the network.  the -request address also serves as the point
of contact for administrative duties.

school is what people send mail to; instead of pointing at addresses,
it points at a shell script which rewrites headers before resending
the email.  school-broadcast (of which nobody except me knows the name;
the name has been changed here to protect my own sanity) points at the
actual list members.

the shell script i use is as follows:

-----------------
#!/bin/sh
cd /tmp
sed -e '/^Reply-To:/d' -e '/^Sender:/d' -e '/^From /d' | \
        (echo Reply-To: ${1}@balltown.cma.com; \
         echo Errors-To: ${1}-request@balltown.cma.com; \
         echo Sender: ${1}-request@balltown.cma.com; \
         cat -) | \
        /usr/lib/sendmail -om -f ${1}-request@balltown.cma.com \
                -F "The ${1} Mailing List" ${1}-rebroadcast
exit 0
-------------------

note that this script does not know the name of the list; the name
is passed in from outside, so that the script may be used for multiple
lists (i run several out of this site.)
the script excises Reply-To:, Sender:, and From lines from the incoming
message, substitutes for Sender: and Reply-To:, and adds Errors-to:
99.9% of all email bounce messages end up being sent to the -request
or owner- addresses if this header rewrite is done.

For digested lists, there is some digestification software around.
Hopefully I'll be able to provide more information in a future version
of this posting.

richard welty (welty@balltown.cma.com)
-- 
richard welty        518-393-7228       welty@cabot.balltown.cma.com
``Nothing good has ever been reported about the full rotation of
  a race car about either its pitch or roll axis''  -- Carroll Smith
