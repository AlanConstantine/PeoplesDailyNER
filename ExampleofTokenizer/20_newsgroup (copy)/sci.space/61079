Path: cantaloupe.srv.cs.cmu.edu!rochester!udel!gatech!howland.reston.ans.net!noc.near.net!uunet!vnet.IBM.COM
From: Wingert@vnet.IBM.COM (Bret Wingert)
Message-ID: <19930422.121236.246@almaden.ibm.com>
Date: Thu, 22 Apr 93 13:54:02 CDT
Newsgroups: sci.space
Subject: Re: Level 5?
Organization: IBM, Federal Systems Co. Software Services
              IBM, Federal Systems Co. Software Services
Disclaimer: This posting represents the poster's views, not those of IBM
News-Software: UReply 3.1
Lines: 91

In <C5uBn5.tz@zoo.toronto.edu> Henry Spencer writes:
>In article <1993Apr21.134436.26140@mksol.dseg.ti.com> mccall@mksol.dseg.ti.com (fred j mccall 575-3539) writes:
>>>>(given that I've heard the Shuttle software rated as Level 5 ...
>>>Level 5?  Out of how many? ...
>>
>>... Also keep in mind that it was
>>*not* achieved through the use of sophisticated tools, but rather
>>through a 'brute force and ignorance' attack on the problem during the
>>Challenger standdown - they simply threw hundreds of people at it and
>>did the whole process by hand...
>
>I think this is a little inaccurate, based on Feynman's account of the
>software-development process *before* the standdown.  Fred is basically
>correct:  no sophisticated tools, just a lot of effort and painstaking
>care.  But they got this one right *before* Challenger; Feynman cited
>the software people as exemplary compared to the engine people.  (He
>also noted that the software people were starting to feel management
>pressure to cut corners, but hadn't had to give in to it much yet.)
>
>Among other things, the software people worked very hard to get things
>right for the major pre-flight simulations, and considered a failure
>during those simulations to be nearly as bad as an in-flight failure.
>As a result, the number of major-simulation failures could be counted
>on one hand, and the number of in-flight failures was zero.
>
>As Fred mentioned elsewhere, this applies only to the flight software.
>Software that runs experiments is typically mostly put together by the
>experimenters, and gets nowhere near the same level of Tender Loving Care.
>(None of the experimenters could afford it.)
>--
>All work is one man's work.             | Henry Spencer @ U of Toronto Zoology
>                    - Kipling           |  henry@zoo.toronto.edu  utzoo!henry
>
News-Software: UReply 3.1
X-X-From: Wingert@VNET.IBM.com (Bret Wingert)
References: <C5sy4s.4x2.1@cs.cmu.edu> <1993Apr21.134436.26140@mksol.dseg.ti.com>
            <C5uBn5.tz@zoo.toronto.edu>

In <C5uBn5.tz@zoo.toronto.edu> Henry Spencer writes:
>In article <1993Apr21.134436.26140@mksol.dseg.ti.com> mccall@mksol.dseg.ti.com (fred j mccall 575-3539) writes:
>>>>(given that I've heard the Shuttle software rated as Level 5 ...
>>>Level 5?  Out of how many? ...
>>
>>... Also keep in mind that it was
>>*not* achieved through the use of sophisticated tools, but rather
>>through a 'brute force and ignorance' attack on the problem during the
>>Challenger standdown - they simply threw hundreds of people at it and
>>did the whole process by hand...
>
>I think this is a little inaccurate, based on Feynman's account of the
>software-development process *before* the standdown.  Fred is basically
>correct:  no sophisticated tools, just a lot of effort and painstaking
>care.  But they got this one right *before* Challenger; Feynman cited
>the software people as exemplary compared to the engine people.  (He
>also noted that the software people were starting to feel management
>pressure to cut corners, but hadn't had to give in to it much yet.)
>
>As Fred mentioned elsewhere, this applies only to the flight software.
>Software that runs experiments is typically mostly put together by the
>experimenters, and gets nowhere near the same level of Tender Loving Care.
 ========================================================================
A couple of points on this thread.

1. We have been using our processes since way before Challenger.  Challenger
   in and of it self did not uncover flaws.

2. What Mr. Spencer says is by and large true.  We have a process that is
   not dependent on "sophisticated tools"  (CASE tools?).  However, tools
   cannot fix a bad process.  Also, tool support for HAL/S (the Shuttle
   Language) is somewhat limited.

3. The Onboard Flight Software project was rated "Level 5" by a NASA team.
   This group generates 20-40 KSLOCs of verified code per year for NASA.

4. Feel free to call me if you or your organization is interested in more info
   on our software development process.

Bret Wingert


(713)-282-7534
FAX: (713)-282-8077


Bret Wingert


(713)-282-7534
FAX: (713)-282-8077


