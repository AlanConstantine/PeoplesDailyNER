Path: cantaloupe.srv.cs.cmu.edu!crabapple.srv.cs.cmu.edu!fs7.ece.cmu.edu!europa.eng.gtefsd.com!howland.reston.ans.net!zaphod.mps.ohio-state.edu!cs.utexas.edu!asuvax!ncar!vexcel!copper!slate!agallagh
From: agallagh@slate.mines.colorado.edu (GALLAGHER ANDREA J )
Newsgroups: comp.windows.x
Subject: Detecting read-only colorcells?
Message-ID: <1993Apr22.060053.29463@slate.mines.colorado.edu>
Date: 22 Apr 93 06:00:53 GMT
Reply-To: ngorelic@speclab.cr.usgs.gov
Organization: Colorado School of Mines
Lines: 27

[again, poseted for a friend]

Okay, I got such great response from my last question (thanks, everyone), 
lets try again:

How can I tell if a colorcell is read-only?

I want to use any read-only cells that are already in my colormap
once I start running out of allocatable cells, using some arbitrary
nearest color matching scheme to get those cells that come closest to
a requested color.

Once I determine if a cell is read-only, I assume I can then just request
an XAllocColor() with the exact same color specifications and it will 
then be flagged as 'used' by my application so that it doesn't later get
freed by someone else and allocated again as read-write to another
application.

So far, the only way I've figured out to do this is to write my own
error handler and just go ahead and request the cells colors, once my
colormap is all full up.  It should error out if the cell is non-shareable.
But life would be much easier if I could just detect the
read-only/shareable stuff directly...

Any ideas?

Noel (ngorelic@speclab.cr.usgs.gov)
