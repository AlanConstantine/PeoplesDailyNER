Newsgroups: sci.crypt
Path: cantaloupe.srv.cs.cmu.edu!magnesium.club.cc.cmu.edu!news.sei.cmu.edu!cis.ohio-state.edu!zaphod.mps.ohio-state.edu!cs.utexas.edu!uunet!pipex!bnr.co.uk!demon!gtoal
From: Graham Toal <gtoal@gtoal.com>
Subject: Re: Let's build software cryptophones for over the internet...
Message-ID: <C622A1.7t6@demon.co.uk>
Originator: gtoal@pizzabox.demon.co.uk
Sender: news@demon.co.uk
Nntp-Posting-Host: pizzabox.demon.co.uk
Reply-To: Graham Toal <gtoal@gtoal.com>
Organization: Cuddlehogs Anonymous
References: <9304202128.AA12773@pizzabox.demon.co.uk> <1regq0INNn7u@gap.caltech.edu>
Date: Sun, 25 Apr 1993 20:01:12 GMT
Lines: 21

In article <1regq0INNn7u@gap.caltech.edu> hal@cco.caltech.edu (Hal Finney) writes:
:I tried this code yesterday.  On my Sparcstation ELC it takes over
:300 seconds to compress 22 seconds' worth of speech.  This means that it
:needs to be "optimized" by over a factor of 10 before it will be usable
:in even a half-duplex mode.

Ouch!  Thanks for trying it.

:I question whether CELP is the best approach for this application.  It produces
:great compression but at the expense of tremendous CPU loads.  We want
:something that can be run on ordinary workstations or even high-end PC's
:without DSP cards.  My guess is that some other algorithm is going to be
:a better starting point.

Yes.  I'm not sure if my xposting to comp.speech made it to here too, but
I've found that a low sample rate (3300 samples/sec at 8 bits per sample)
plus the pd 'shorten' lossless sound compression code actually does get
speech into 14.4K with a simdgen left over.  This is *definitely* worth
working on, folks.  And shorten works in well under real-time.

G
