Newsgroups: sci.electronics
Path: cantaloupe.srv.cs.cmu.edu!das-news.harvard.edu!noc.near.net!howland.reston.ans.net!usc!sdd.hp.com!nigel.msen.com!fmsrl7!destroyer!cs.ubc.ca!alberta!kakwa.ucs.ualberta.ca!ee.ualberta.ca!ulan
From: ulan@ee.ualberta.ca (Dale Ulan)
Subject: Re: what to do with old 256k SIMMs?
Message-ID: <ulan.735093864@ee.ualberta.ca>
Sender: news@kakwa.ucs.ualberta.ca
Nntp-Posting-Host: eigen.ee.ualberta.ca
Organization: University Of Alberta, Edmonton Canada
References: <120466@netnews.upenn.edu> <1993Apr15.100452.16793@csx.cciw.ca> <1qpgsiINN31p@diplodocus.cis.ohio-state.edu>
Date: Sun, 18 Apr 1993 00:44:24 GMT
Lines: 28

rubin@cis.ohio-state.edu (Daniel J Rubin) writes:

>How hard would it be to somehow interface them to some of the popular 
>Motorola microcontrollers.  I am a novice at microcontrollers, but I am
>starting to get into them for some of my projects.  I have several 256k
>SIMMs laying around from upgraded Macs and if I could use them as "free"
>memory in one or two of my projects that would be great.  One project that
>comes to mind is a Caller ID device that would require quite a bit of RAM
>to store several hundered CID records etc...

Assuming 68HC11...
In expanded muxed mode, you *could* do it. Much easier if you get a DRAM
controller IC. The MMI 673102 could be used to implement this, or you
could use a counter and a huge multiplexer to provide row/column/refresh
address multiplexing. The thing with DRAMs is that they require wierd
timing, address multiplexing, and refresh.

Actually, if you wanted to use a 68008 IC, you could look at AN897, which
has a neat controller built in. There is also the 683xx, I think one
of those has the DRAM controller built in. This one is for the 6664
DRAM, however, the 41256 has only one more address line, adding only
another component or so. The 256k SIMMs are basically 8 or 9 41256
DRAM chips (or their equivalent in fewer packages).

It *can* be done, just takes a bit of logic design. I'm actually
about to do it using a 65C02P3 chip... I've got 8 256k simms... that's
2 megabytes on my Apple //e... (used to be in my '386).

