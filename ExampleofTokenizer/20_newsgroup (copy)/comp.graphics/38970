Newsgroups: comp.graphics
Path: cantaloupe.srv.cs.cmu.edu!magnesium.club.cc.cmu.edu!news.sei.cmu.edu!cis.ohio-state.edu!zaphod.mps.ohio-state.edu!caen!destroyer!gumby!calvin!ursa!eball12
From: eball12@ursa.calvin.edu (Edward Ball)
Subject: IBM: Writing to screen memory (graphics)
Message-ID: <eball12.736125322@ursa>
Sender: news@calvin.edu (The Annoying News Pseudo-User)
Nntp-Posting-Host: ursa
Organization: Calvin College
Date: Thu, 29 Apr 1993 23:15:22 GMT
Lines: 27

Can anyone give me information or lead me to electronic information (not
books; I'm too poor...) regarding programming the standard graphics modes?
320x200x4 and 640x200x2 are easy enough, but I'm not so sure about the
rest.  Something about planes or something, and writing to ports and the
like, but I don't know the numbers or anything -- for the 16 color modes, I
think.  If I'm wrong, let me know.  Also, 320x200x256 is just one byte/pixel;
that's easy enough, but are there any other ways to write to the screen,
perhaps bytes at a time, or something like that?

Of course, I'd appreciate any information about any mode....  which reminds
me of another question -- do the SuperVGA modes work the same, generally,
as the normal 16 and 256 color modes, or is not only the mode numbers
for various cards different, but the methods for writing to the screen
different as well?

Thanks for any help you can give me...  I'm developing a screen class for
C++ and find myself searching for information.  Oh, I do have Ralf Brown's
Interrupt List, which has given me tons of invaluable information already.
It just doesn't go into the screen programming details (except for the
read/write pixel BIOS calls...

Thanks again.

--
///////////////////////////////////////////////////////////////////////////
// Edward Ball, .sigless Knight                       eball12@calvin.edu //
///////////////////////////////////////////////////////////////////////////
