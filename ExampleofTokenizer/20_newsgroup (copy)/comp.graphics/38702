Path: cantaloupe.srv.cs.cmu.edu!magnesium.club.cc.cmu.edu!news.sei.cmu.edu!fs7.ece.cmu.edu!europa.eng.gtefsd.com!howland.reston.ans.net!zaphod.mps.ohio-state.edu!caen!nigel.msen.com!math.fu-berlin.de!irz401!irzr17.inf.tu-dresden.de!beck
From: beck@irzr17.inf.tu-dresden.de (Andre Beck)
Newsgroups: comp.graphics
Subject: Re: Fonts in POV??
Date: 23 Apr 1993 18:36:17 GMT
Organization: Dept. of Computer Science, TU Dresden, Germany.
Lines: 57
Distribution: world
Message-ID: <1r9cv1$hgj@irz401.inf.tu-dresden.de>
References: <1qg9fc$et9@wampyr.cc.uow.edu.au>
Reply-To: Andre_Beck@IRS.Inf.TU-Dresden.DE
NNTP-Posting-Host: irzr17.inf.tu-dresden.de
Keywords: fonts, raytrace


In article <1qg9fc$et9@wampyr.cc.uow.edu.au>, g9134255@wampyr.cc.uow.edu.au (Coronado Emmanuel Abad) writes:
|> 
|> 
|> 	I have seen several ray-traced scenes (from MTV or was it 
|> RayShade??) with stroked fonts appearing as objects in the image.
|> The fonts/chars had color, depth and even textures associated with
|> them.  Now I was wondering, is it possible to do the same in POV??
|> 

Hi Noel,

I've made some attempts to write a converter that reads Adobe Type 1 fonts,
triangulates them, bevelizes them and extrudes them to result in a generic
3d object which could be used with PoV f.i.

The problem I'm currently stuck on is that theres no algorithm which
triangulates any arbitrary polygonal shape. Delaunay seems to be limited
to convex hulls. Constrained delaunay may be okay, but I have no code
example of how to do it.

Another way to do the bartman may be

- TGA2POV
- A selfmade variation of this, using heightfields.

  Create a b/w picture (BIG) of the text you need, f.i. using a PostScript
  previewer. Then, use this as a heightfield. If it is white on black,
  the heightfield is exactly the images white parts (it's still open
  on the backside). To close it, mirror it and compound it with the original.

Example:

object {
   union {
      height_field { gif "abp2.gif" }
      height_field { gif "abp2.gif" scale <1 -1 1>}
   }
   texture {
      Glass
   }
   translate <-0.5 0 -0.5>      //center
   rotate <-90 0 0>             // rotate upwards
   scale  <10 5 100>            // scale bigger and thicker
   translate <0 2 0>            // final placement
}


abp2.gif is a GIF of arbitrary size containing "ABP" black on white in
Times-Roman 256 points.

--
+-o-+--------------------------------------------------------------+-o-+
| o |                \\\-  Brain Inside -///                       | o |
| o |                    ^^^^^^^^^^^^^^^                           | o |
| o | Andre' Beck (ABPSoft) mehl: Andre_Beck@IRS.Inf.TU-Dresden.de | o |
+-o-+--------------------------------------------------------------+-o-+
